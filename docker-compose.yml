version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: facturacion-postgres
    environment:
      POSTGRES_DB: bd_sistema_facturacion
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - facturacion-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicación Spring Boot
  app:
    # Usar imagen desde Docker Hub (reemplazar con tu usuario de Docker Hub)
    image: wilsonpinos04/sistema-facturacion:latest
    # Para desarrollo local, descomenta la siguiente línea y comenta la imagen de arriba
    # build: .
    container_name: facturacion-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bd_sistema_facturacion
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - facturacion-network
    restart: unless-stopped

  # Adminer para administración de la base de datos (opcional)
  adminer:
    image: adminer:latest
    container_name: facturacion-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - facturacion-network

volumes:
  postgres_data:
    driver: local

networks:
  facturacion-network:
    driver: bridge
